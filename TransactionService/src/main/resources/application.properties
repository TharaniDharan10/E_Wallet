spring.application.name=TransactionService
server.port=7001

spring.datasource.username=root
spring.datasource.password=rootroot
spring.datasource.url=jdbc:mysql://localhost:3306/JBDL_71_Major_Transaction?createDatabaseIfNotExist=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#Kafka producer
#Serialiser is required when data is travelling from our app to other
#Deserializer is required when data is travelling to our app from other
#Producers will only require serializers and consumers will require deserializers.If at all we want to create our own implementation of serializer,check on class StringSerializer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#kafka consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer